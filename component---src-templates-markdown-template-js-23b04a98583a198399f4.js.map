{"version":3,"sources":["webpack:///./src/components/navigation.js","webpack:///./src/components/footer.js","webpack:///./src/components/header.js","webpack:///./src/components/container.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/templates/markdownTemplate.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["props","to","href","children","className","styles","container","loader","enqueue","React","createContext","post","data","markdownRemark","portfolio","frontmatter","title","language","map","lang","technology","tech","content","dangerouslySetInnerHTML","__html","html","github_link","githuburl","query","m","module","exports","require","default","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","json"],"mappings":"mKAIe,WAAAA,GAAK,OAClB,6BACE,kBAAC,IAAD,CAAMC,GAAG,KAAT,UCFW,G,UAAA,SAACD,GAAD,OACX,gCACA,4BACI,4BAAI,kBAAC,IAAD,CAAMC,GAAG,UAAT,UACJ,4BAAI,uBAAGC,KAAK,wBAAR,iBACJ,4BAAI,uBAAGA,KAAK,+BAAR,WACJ,6CACA,2CAAgB,uBAAGA,KAAK,6BAAR,eCPT,G,UAAA,cAAGC,SAAH,OACb,gCACE,4BAAI,kBAAC,IAAD,CAAMF,GAAG,KAAT,mBCDO,oBAAGE,EAAH,EAAGA,SAAH,OACb,yBAAKC,UAAWC,IAAOC,WACrB,kBAAC,EAAD,MACA,kBAAC,EAAD,MACCH,EACD,kBAAC,EAAD,S,kCCVJ,sGAcyBI,QAAOC,QAELC,IAAMC,cAAc,K,kCChB/C,mHAKe,sBAAe,IACtBC,EADqB,EAAXC,KACEC,eAElB,OACE,kBAAC,IAAD,KACE,yBAAKT,UAAWC,IAAOS,WACrB,4BAAKH,EAAKI,YAAYC,OACQ,MAA7BL,EAAKI,YAAYE,UAChB,yBAAKb,UAAWC,IAAOY,UACrB,yCACA,4BACGN,EAAKI,YAAYE,SAASC,KAAI,SAAAC,GAAI,OACjC,4BAAKA,QAKmB,MAA/BR,EAAKI,YAAYK,YAChB,yBAAKhB,UAAWC,IAAOe,YACrB,6CACA,4BACGT,EAAKI,YAAYK,WAAWF,KAAI,SAAAG,GAAI,OACnC,4BAAKA,QAKb,yBACEjB,UAAWC,IAAOiB,QAClBC,wBAAyB,CAAEC,OAAQb,EAAKc,QAE1C,yBAAKrB,UAAWC,IAAOqB,aACrB,uBAAGxB,KAAMS,EAAKI,YAAYY,WAA1B,sBAOH,IAAMC,EAAK,c,qBC5ClB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,UALRH,EAAEI,SAAYJ,G,wFCsBhCK,UAjBU,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cACpC,OAAKA,EAGE3B,IAAM4B,cAAcC,IAApB,eACLH,WACAC,iBACGA,EAAcG,OALV","file":"component---src-templates-markdown-template-js-23b04a98583a198399f4.js","sourcesContent":["import React from \"react\"\nimport styles from \"./navigation.module.css\"\nimport { Link } from \"gatsby\"\n\nexport default props => (\n  <nav>\n    <Link to=\"/\">Home</Link>\n  </nav>\n)\n","import React from 'react'\nimport styles from './footer.module.css'\nimport {Link} from 'gatsby'\n\nexport default (props) => (\n    <footer>\n    <ul>\n        <li><Link to=\"/about\">About</Link></li>\n        <li><a href=\"https://makovako.xyz\">Landing page</a></li>\n        <li><a href=\"https://github.com/makovako\">Github</a></li>\n        <li>&copy; Marek Valko</li>\n        <li>Build using <a href=\"https://www.gatsbyjs.org/\">Gatsby</a></li>\n    </ul>\n</footer>\n)","import React from \"react\"\nimport styles from \"./header.module.css\"\nimport {Link} from 'gatsby'\n\nexport default ({ children }) => (\n  <header>\n    <h1><Link to=\"/\">My projects</Link></h1>\n  </header>\n)\n","import React from \"react\"\nimport styles from \"./container.module.css\"\nimport Navigation from '../components/navigation'\nimport Footer from '../components/footer'\nimport Header from './header'\nexport default ({ children }) => (\n  <div className={styles.container}>\n    <Header></Header>\n    <Navigation></Navigation>\n    {children}\n    <Footer></Footer>\n  </div>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport loader from \"./loader\"\n\nconst prefetchPathname = loader.enqueue\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n  prefetchPathname,\n}\n","import React from \"react\"\nimport { graphql, Link } from \"gatsby\"\nimport Container from \"../components/container\"\nimport styles from \"./markdownTemplate.module.css\"\n\nexport default ({ data }) => {\n  const post = data.markdownRemark\n\n  return (\n    <Container>\n      <div className={styles.portfolio}>\n        <h2>{post.frontmatter.title}</h2>\n        {post.frontmatter.language != null && (\n          <div className={styles.language}>\n            <h4>Language:</h4>\n            <ul>\n              {post.frontmatter.language.map(lang => (\n                <li>{lang}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        {post.frontmatter.technology != null && (\n          <div className={styles.technology}>\n            <h4>Technologies:</h4>\n            <ul>\n              {post.frontmatter.technology.map(tech => (\n                <li>{tech}</li>\n              ))}\n            </ul>\n          </div>\n        )}\n        <div\n          className={styles.content}\n          dangerouslySetInnerHTML={{ __html: post.html }}\n        />\n        <div className={styles.github_link}>\n          <a href={post.frontmatter.githuburl}>View on Github</a>\n        </div>\n      </div>\n    </Container>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      frontmatter {\n        title\n        githuburl\n        language\n        technology\n      }\n      html\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}